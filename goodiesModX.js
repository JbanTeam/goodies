//разметка migx поля
[
	{"caption":"", "fields": [
		{"field":"h3","caption":"название сервиса"},
		{"field":"desc","caption":"описание сервиса"},
		{"field":"image","caption":"фото сервиса","inputTV":"abstraktImage"},
		{"field":"image2","caption":"логотип","inputTV":"abstraktImage"}
	]}
]

[
	{"header": "название сервиса", "sortable": "true", "dataIndex": "h3"},
	{"header": "фото сервис", "width": "80", "sortable": "false", "dataIndex": "image","renderer": "this.renderImage"}
]
//*******************************************************************************************
[
{"caption":"", "fields": [
{"field":"slide","caption":"картинка","inputTVtype":"image","sourceFrom":"migx"},
{"field":"alt_text","caption":"описание"}
]}
]

[
{"header": "Атрибут Alt", "sortable": "true", "dataIndex": "alt_text"},
{"header": "Изображение", "width": "80", "sortable": "false", "dataIndex": "slide","renderer": "this.renderImage"}
]
//migx in migx
[
{"caption":"", "fields": [
	{"field":"h3","caption":"название сервиса"},
	{"field":"price","caption":"услугацена","inputTV":"s-inside-price-sub"} //другое migx поле
]}
]
//******************************************
// вывод migx поля
[[getImageList? //без создания чанка
  &docid=`5`
  &tvname=`banner_top`
  &tpl=`@CODE:
  <div class="banner-block__banner-item">
      <img src="[[+slide]]" alt="[[+alt_text]]">
  </div>
  `
  ]]

[[getImageList?
	&tvname=`s-callback-formoptions`
	&tpl=`s-callback-formoptions-chunk`
&docid=`1`]]

[[getImageList? //с pdo resources и без, если нужно вывести собственное поле
&tvname=`s-inside-osalone-item`
&docid=`[[+id]]`
&tpl=`s-inside-osalone-item-subchunk`
]]

[[+image]] - вывод в чанке
<a href="[[~[[+id]]]]" class="button">Услуги</a> - ссылка на документ

[[getImageList? //вывод в чанке migx in migx
&docid=`[[+id]]`
&value=`[[+price]]` //поле второго migx, указанное в migx разметке
&tpl=`s-inside-price-sub-chunk`]]

//migx средствами fenom (без создания чанка)
{var $migxtv = $_modx->resource.migxtv | json_decode} //получаем в переменную migx поле и преобразовываем в массив

{foreach $migxtv as $migx} //проходимся в цикле по каждому migx элементу и выводим его поля
	<p>{$migx.name}</p>
	<p>{$migx.desc}</p>
	<p>{$migx.phone}</p>
{/foreach}

//migx в migx средствами fenom
{var $services = $_modx->resource['pServices-services'] | json_decode}
{*{$services|print}*}

{foreach $services as $service}
	{var $services_costs = $service['service_cost'] | json_decode}
	<div class="container">
		<div class="kind" id="service{$service['MIGX_id']}">
			{$service.type}
		</div>

		{foreach $services_costs as $service_cost}
			<div class="table-row">
				<div>{$service_cost.service}</div><div>{$service_cost.cost}</div>
			</div>
		{/foreach}

	</div>
{/foreach}

//******************************************
//вывод fastfield
[[#1.tv.s-callback-formlogo]] - дополнительное поле, с указание id документа, из которого выводится поле
[[#1.pagetitle]] - название страницы
[[#[[*id]].tv.s-inside-ser-h2]] - вывод собственного поля
//******************************************
//вывод чанка с классом и без
[[$head? &bodyClass=`ishome`]] - в чанке добавить [[+bodyClass]]
[[$head]]
//******************************************
//страндартный вывод
[[!++site_url]]
[[++modx_charset]]
[[++site_name]]
[[*pagetitle]] - вывод названия страницы
[[*description]] - вывод описания страницы
[[*content]] - вывод контента, который забивается в редакторе
[[++phone]] - вывод своего поля из системных настроек
//**********************************************
//вывод pdo меню
[[pdoMenu? &parents=`0` &level=`1`]]
[[pdoMenu? &parents=`0` &level=`1` &limit=`6`]]
[[pdoMenu? &parents=`0` &level=`1` &outerClass=`nav nav-bar`]] - задает класс меню
//**********************************************
//вывод pdo ресурсов
//со стандартными полями
[[pdoResources?
&resources=`5,6,7,8,9`
&sortdir=`asc`
&parents=`0`
&tpl=`s-services-item-chunk`
&includeTVs=`logoImage, bgImage, service1, service2, service3, price1, price2, price3, h3`
&tvPrefix=`tv.`
]]

[[!pdoResources?
&parents=`6`
&depth=`1`
&limit=`6`
&includeTVs=`practiceImage`
&includeContent=`1`
&tpl=`@FILE chunks/practice-item.tpl`
]]

//с migx полем
[[pdoResources?
&resources=`5,6,7,8,9`
&sortdir=`asc`
&parents=`0`
&tpl=`s-inside-osalone-item-chunk`
&includeTVs=`s-inside-osalone-item`
]]

//вывод с условием
[[pdoResources?
&parents=`10`
&limit=`0`
&tpl=`@INLINE
<div class="service-group-list__item">
    <a href="[[+uri]]" class="img-placeholder img-placeholder--service"
       data-src="assets/img/-text350x150.png">
        <img src="assets/img/service-small.gif" alt="product" class="img-small">
    </a>
    <a href="[[+uri]]" class="service-group__link">[[+pagetitle]]</a>
</div>
`
&toPlaceholder=`scud` //сохраняем вывод pdoResources в переменную
]]

[[+scud:notempty=` //проверяем переменную на пустоту
<div class="service-group">
    <h2 class="service-group__title">Системы контроля доступа</h2>
    <div class="service-group-list">
        [[+scud]] //выводим переменную
    </div>
</div>
`]]

//вывод с условием (аналог в феном, если toPlaceholder начинает чудить)
{$_modx->runSnippet('pdoResources', [
    'parents'=>10,
    'limit'=>0,
    'tpl'=> '@INLINE <div class="service-group-list__item"> <a href="[[+uri]]" class="img-placeholder img-placeholder--service" data-src="assets/img/-text350x150.png"> <img src="assets/img/service-small.gif" alt="product" class="img-small"></a><a href="[[+uri]]" class="service-group__link">[[+pagetitle]]</a></div>',
    'toPlaceholder'=>'scud'
])}

{if $_modx->getPlaceholder('scud')}
    <div class="service-group">
        <h2 class="service-group__title">Системы контроля доступа</h2>
        <div class="service-group-list">
            {$_modx->getPlaceholder('scud')}
        </div>
    </div>
{/if}

//вывод в зависимости от значения дополнительного поля, если hot_services в положении 1 то выводим
[[!pdoResources?
&parents=`[[+id]]`
&limit=`0`
&includeTVs=`hot_service`
&where=`{ "hot_service":"1" }` 
&tpl=`@FILE chunks/sidebar/side_link_item.tpl`
]]

//**************************************************
//вывод pdoPage
// pdoPage позволяет вывести результаты работы других сниппетов с разбивкой на страницы (пагинация)
[[!pdoPage?
&parents=`6`
&depth=`1`
&limit=`2`
&tplPage=`@INLINE <li class="pagination-item"><a href="[[+href]]">[[+pageNo]]</a></li>`
&tplPageActive=`@INLINE <li class="pagination-item active"><a href="[[+href]]">[[+pageNo]]</a></li>`
&tplPageFirst=`@INLINE <li class="pagination-item"><a href="[[+href]]">Первая</a></li>`
&tplPageLast=`@INLINE <li class="pagination-item"><a href="[[+href]]">Последняя</a></li>`
&tplPagePrev=`@INLINE <li class="pagination-item"><a href="[[+href]]">&laquo;</a></li>`
&tplPageNext=`@INLINE <li class="pagination-item"><a href="[[+href]]">&raquo;</a></li>`
&tplPageFirstEmpty=`@INLINE <li class="pagination-item"><span>Первая</span></li>`
&tplPageLastEmpty=`@INLINE <li class="pagination-item"><span>Последняя</span></li>`
&tplPagePrevEmpty=`@INLINE <li class="pagination-item"><span>&laquo;</span></li>`
&tplPageNextEmpty=`@INLINE <li class="pagination-item"><span>&raquo;</span></li>`
&tplPageWrapper=`@INLINE <div class="pagination"><ul class="pagination-list">[[+first]][[+prev]][[+pages]][[+next]][[+last]]</ul></div>`
&ajaxMode=`default`
&ajaxElemWrapper=`.s-practice .wrapper`
&ajaxElemRows=`.s-practice .wrapper .items`
&ajaxElemPagination=`.s-practice .pagination`
&ajaxElemLink=`.s-practice .pagination a`
&includeTVs=`practiceImage`
&includeContent=`1`
&tpl=`@FILE chunks/practice-item.tpl`
]]

[[!+page.nav]]

<script type="text/javascript">
	pdoPage.callbacks['before'] = function(config) {}; //убирает прокрутку наверх
	pdoPage.callbacks['after'] = function(config) {};
</script>

///@mypagination позволяет подцепить оформление пагинации прописанное в парметра сниппета pdoPage в админке
[[!pdoPage@mypagination?
&limit=`2`
&tpl=`portfolioItemChunk`
&includeTVs=`image`
&includeContent=`1`]]

[[!+page.nav]] - пагинация
//****************************************************
[[!pdoPage?
&parents=`0`
&limit=`5`
&tpl=`@INLINE <div>[[+id]] - [[+pagetitle]]</div>`
]]
[[!+pageCount:ne=`1`:then=`[[!+page.nav]]`:else=`Без пагинации сегодня`]]

//вывод с результатами поиска
[[!pdoPage?
&element=`mSearch2`
&limit=`5`
&tpl=`@INLINE
<li class="search-result-list__result-item">
    <a href="[[+uri]]" class="search-result-list__result-link">[[+pagetitle]]</a>
    <div class="search-result-list__result-desc">
        [[+introtext]]
    </div>
</li>
`
]]

[[!+page.nav]]
//*****************************************
{'!pdoPage' | snippet : [
  'element' => 'pdoResources',
  'parents' => 0,
  'limit' => 5,
  'tpl' => '@INLINE <div>{$id} - {$pagetitle}</div>',
]}
{if ('pageCount' | placeholder) != '1'}
    {'page.nav' | placeholder}
{else}
    Без пагинации сегодня
{/if}
//**************************************************
//вывод pdoCrumbs, хлебные крошки
[[!pdoCrumbs?
&tplWrapper=`@INLINE <ul class="breadcrumb">[[+output]]</ul>` //@INLINE инлайн чанк, чтобы не создавать чанк с мелким кодом
&tpl=`@INLINE <li><a href='[[+link]]'>[[+menutitle]]</a></li>`
&tplCurrent=`@INLINE <li class='active'>[[+menutitle]]</li>`
&tplHome=`@INLINE <li><a href='/'>Главная</a>`
&showHome=`1`
&outputSeparator=``]]

[[pdoCrumbs?
&tplWrapper=`@INLINE <div class="breadcrumbs">[[+output]]</div>`
&tpl=`@INLINE <a href="[[+link]]" class="breadcrumbs__item">[[+menutitle]]</a>`
&tplCurrent=`@INLINE <a class="breadcrumbs__item breadcrumbs__item--active">[[+menutitle]]</a>`
&outputSeparator=`&nbsp;/&nbsp;`]]
//**************************************************
//вывод формы обратной связи (AjaxForm)
[[!AjaxForm?
&snippet=`FormIt`
&form=`tpl.AjaxForm.example`
&hooks=`email`
&emailSubject=`Заголовок письма`
&emailTo=`novgorod59@mail.ru`
&validate=`name:required,email:required,message:required`
&validationErrorMessage=`В форме содержатся ошибки`
&successMessage=`Сообщение успешно отправлено`]]
//**************************************************
//параметры полей
[[*longtitle:default=`[[*pagetitle]]`]] - если longtitle не указан, то выводим pagetitle
[[+content:ellipsis=`100`]] - выводит 100 символов и после ставит многоточие
//**************************************************
//плагины
ace/codemirror - редакторы
tinyMce - контентный редактор
formIt - модуль для отправки форм
pdoTools - вывод ресурсов
ajaxForm - чтобы формы шли через ajax
translit - дружественные url на английском
collections - группировка контента, дочерние страницы
migx - мигс поля
fastfield - офигенные поля
phpthumbof - подгон картинок
bannerY - рекламные баннеры, можно использовать для слайдера
clientConfig - создает типа системные настройки для системных полей
debugParser - показывает сколько времени и ресурсов затрачивается на формирование страницы
tagElemetPlugin - быстрое создание чанков прямо в редакторе Ctrl+Enter(выделить название чанка)
Vapor - запаковывает весь сайт в зип архив(резервная копия)
ControlErrorLog - кнопка журнала ошибок появляется рядом с аватаром
Console - консоль для выполнения php скриптов
SimpleSearch - компонент для поиска по сайту //<input type="search" name="search" id="search" class="search-form__field" title="Поиск по сайту" placeholder="Введите поисковую фразу">
mSearch2 - компонент для поиска по сайту продвинутый(платный) //<input type="search" name="query" id="search" class="search-form__field" title="Поиск по сайту" placeholder="Введите поисковую фразу">
SeoPro, SeoTab - для сео

/******************************************************************************************************************/
/******************************************************************************************************************/
/*базовый курс MODX************************************************************************************************/
[[*]] - говорит о том, что запрашивается поле текущей страницы
[[++]] - запрашивается системная настройка
[[+]] - запрашивается переменная из параметров шаблона
[[+]] - вывод в чанке
<base href='[[++site_url]]'> //для того чтобы писать относительные пути для картинок

// проверка переменной из параметров шаблона, аналог условия
[[+mobile_detection:is=`0`:then=`
    <h2>Hello Desktop</h2>
    `:else=`
    <h2>Hello Mobile</h2>
    `]]

//параметры вывода дополнительного поля (например изображение)
//прямо в полях ввода можно выводить параметры дополнительного поля
[[+alt]], [[+class]] - для этого их нужно задать во вкладке параметры
//задаются эти параметры при выводе изображения
[[*image? &class=`responsive` &alt=`текст`]]

//вывод чанка с параметрами
[[$header? &name=`Вася` &=age`22`]]
//в самом чанке выводим
[[+name]], [[+age]]

//вывод даты, сниппет pdoResources сам подставляет модификатор strtotime
[[*pablishedon:strtotime:date=`%d.%m.%y`]]

//***********************************************************************************
//***********************************************************************************
//разработка с помощью шаблонизатора fenom(идет в комплекте с pdoTools)
//включить в системных настройках - Использовать Fenom на страницах

//создаем главный шаблон layout.tpl, скидываем туда верстку
{extends 'file:templates/layout.tpl'} //подключаем главный шаблон в других шаблонах

//в главном шаблоне декларируем подобные блоки, в других шаблонах в эти блоки вставляем свой код
{block 'main'}

{/block}

//подключаем чанк средствами феном
{include 'file:chunks/sidebar.tpl'}

//распечатать на экран доступные поля ресурса (и любые переменные)
{$_modx->resource|print}

//закрыть доступ к сайту не авторизованным пользователям(не админу) или показывать другой дизайн
{if $_modx->hasSessionContext('mgr')}
	{include 'file:templates/index.tpl'} //без else пользователи ничего не увидят на сайте
	{else}
	{include 'file:templates/old_design.tpl'}
{/if}

{$_modx->config.company_phone} //тоже самое что и [[++company_phone]]
//сниппет*********************************************************
//в сниппет по умолчанию передается переменная $input
<?php
$input_without_spaces = trim($input); //убирает пробелы

$pattern = '/^(\d)(\d{3})(\d{3})(\d{2})(\d{2})$/';

$replacement = '8 (\2) \3-\4-\5';

$output = preg_replace($pattern, $replacement, $input_without_spaces);

return $output;

{$_modx->config.company_phone|phone_format} //вывод сниппета в феноме

//отправка письма******************************************************************* 
[[!FormIt?
&hooks=`email,redirect,FormItSaveForm` //FormItSaveForm - сохранение информации о письме в базу данных(приложения/FormIt)
//FormItSaveForm
&formName=`Форма со страницы контакты`
&formFields=`name,email,phone`
&fieldNames=`name==Имя,email==E-mail,phone==Телефон`
//redirect
&redirectTo=`[[*id]]` //редирект на текущую страницу (подставить ид страницы)
&redirectParams=`{ "success:":"1" }` //параметры отобразятся в адресной строке
//email
&validate=`name:required,email:email:required,phone:required,message:required`
&validationErrorMessage=`Что-то пошло не так, проверьте форму!!!`
&successMessage=`Форма успешно отправлена`
&emailTo=`novgorod59@mail.ru`
&emailSubject=`Письмо со страницы контакты`
&emailFromName=`От дяди Пети`
&emailTpl=`@INLINE
<p>Имя - [[+name]]</p>
<p>Почта - [[+email]]</p>
<p>Телефон - [[+phone]]</p>
<div>Сообщение - [[+message]]</div>
`
&emailTpl=`@FILE chunks/emails/contacts_email.tpl` //чанк созданный средствами феном
]]

//блоки куда выведутся сообщения после отправки
<div>[[!+fi.validation_error_message]]</div> 
<div>[[!+fi.successMessage]]</div>

{if $.get.success?} //если в адресной строке имеется параметр success то выводим h1, если нет то обычный контент страницы
	<h1>Форма успешно отправлена</h1>
{else}
	контент страницы

///отправка письма через Ajax
[[!AjaxForm?
&snippet=`FormIt`
&form=`@FILE chunks/form/contacts_form.tpl` //чанк формы обратной связи
&hooks=`email,FormItSaveForm` //FormItSaveForm - сохранение информации о письме в базу данных(приложения/FormIt)
//FormItSaveForm
&formName=`Форма со страницы контакты`
&formFields=`name,email,phone`
&fieldNames=`name==Имя,email==E-mail,phone==Телефон`
//email
&validate=`name:required,email:email:required,phone:required,message:required`
&validationErrorMessage=`Что-то пошло не так, проверьте форму!!!`
&successMessage=`Форма успешно отправлена`
&emailTo=`novgorod59@mail.ru`
&emailSubject=`Письмо со страницы контакты`
&emailFromName=`От дяди Пети`
&emailTpl=`@INLINE
<p>Имя - [[+name]]</p>
<p>Почта - [[+email]]</p>
<p>Телефон - [[+phone]]</p>
<div>Сообщение - [[+message]]</div>
`
&emailTpl=`@FILE chunks/emails/contacts_email.tpl` //чанк созданный средствами феном
]]

//скрипт консоли для быстрого создания рыбных ресурсов***************************************************************************
<?php
for($i=3; $i<9; $i++) {
    $res=$modx->newObject('modResource');
    $res->set('template', 6);
    $res->set('isfolder', 0);
    $res->set('published', 1);
    $res->set('publishedon', time());
    $res->set('createdon', time());
    $res->set('pagetitle', 'Услуга' .$i);
    $res->set('alias', 'usluga' .$i);
    $res->set('parent' 9);
    $res->save();
}

//вывод сниппета mSearch2
[[!mSearch2?
&tpl=`@INLINE
<li class="search-result-list__result-item">
    <a href="[[+uri]]" class="search-result-list__result-link">[[+pagetitle]]</a>
    <div class="search-result-list__result-desc">
        [[+introtext]]
    </div>
</li>
`
]]

//****************************************************
//плагин miniShop2 json для кропа изображений магазина
{"middle":{"w":191,"q":90,"far":"C","bg":"ffffff"},
"og":{"w":537,"h":240,"q":100,"far":"C","bg":"ffffff"},
"small":{"w":20,"q":90,"far":"C","bg":"ffffff"},
"big":{"w":850,"h":850,"q":100,"bg":"","ra":1},
"crop":{"w":72,"q":100,"far":"C","bg":"ffffff"}}

//распечатать поля галереи сниппета miniShop2
[[!msGallery?tpl=``]]

//цикл феном
{foreach $files as $file}
	<figure class="product-slider__item">
		<img data-big-image="{$file['big']}"
		     data-middle-image="{$file['middle']}"
		     data-size="{$file['properties']['width']}x{$file['properties']['height']}" class="product-slider__item-img"
		     src="{$file['crop']}" alt="banner">
	</figure>
{/foreach}

//условие феном (если переменная thumb не пуста)
{if $thumb?}
	<figure class="product-detail-block__photo__main-foto">
		<img class="product-detail-block__photo__main-foto-img" src="{$_modx->resource.thumb}"
		     alt="" data-index="0">
	</figure>
{else}
	<figure class="product-detail-block__photo__main-foto">
		<img class="product-detail-block__photo__main-foto-img" src="assets/images/no_foto.jpg"
		     alt="нет картинки" data-index="0">
	</figure>
{/if}

//вывод товаров miniShop2 с пагинацией
[[!+page.nav]]

[[!pdoPage?
&element=`msProducts`
&limit=`2`
&includeThumbs=`small,middle`
&tpl=`@FILE chunks/miniShop2/product_item.tpl`
]]

//вывод похожих товаров, должны быть добавлены в связях товара(выводится в товаре)
[[!msProducts?
&tpl=`@FILE chunks/miniShop2/product_item.tpl`
&parents=`8`
&link=`2`
&master=`[[*id]]`
&limit=`4`
]]

//вывод товара с атрибутом новый(по аналогии популярный, товар по акции и пр. атрибуты)
[[!msProducts?
&tpl=`@FILE chunks/miniShop2/product_item.tpl`
&parents=`8`
&includeThumbs=`small,middle`
&limit=`4`
&where=`{ "Data.new":1 }` //Data.popular, Data.new, Data.old_price (where - должны быть пробелы по бокам)
]]

//robots********************************************************************************
//физический файл перебивает по приоритету виртуальный, поэтому на время разработки можно создать физический файл чтобы сайт не индексировался поисковиками
User-agent: *
Disallow: /manager/
Disallow: /assets/components/
Disallow: /core/
Disallow: /connectors/
Disallow: /index.php
Disallow: *?query
Host: [[++http_host]]
Sitemap: [[++site_url]]sitemap.xml
///физический
User-agent: *
Disallow: /

///sitemap.xml********************************************************************************
[[!pdoSitemap?
&resources=`-22` //исключить ресурс с ИД 22
]]

//seo*********************************************************************************
<meta name="keywords" content="[[+seoPro.keywords]]">
<meta name="description" content="[[*description]]">

<meta name="robots" content="[[+seoTab.robotsTag]]">

//первоначальные системные настройки*****************************************************
название сайта (site_name)
суффикс контейнера в дружественных url - пустота
чтобы адреса отображались бех .html на конце - Содержимое/типы содержимого
дружественные url прокачать с помощью плагина translit, в пункте транслитерация псевдонимов указать russian, 5 последних пунктов переключить в Да
для разработке с помощью фенома - переключить настройку Использовать феном на страницах в Да
для избавления от дублей страниц - Строгий метод запроса(request_method_strict) в Да
Локаль(locale) - ru_RU.UTF8
Язык текстового редактора во фронтендере сайта(fe_editor_lang) - ru
Использовать Gravatar(enabke_gravatar) - нет
Формат даты в панели управления(manager_date_format) - d-m-Y
Формат времени в панели управления(manager_time_format) - H:i
Первый день недели(manager_week_start) - 1
Поле для названия узла в дереве (resource_tree_node_name)- 
Все эти настройки можно поставить автоматом скриптом helpme(копируем в корень, обратиться к нему в адресной строке)

Для переноса сайта с сервера на сервер - запаковываем все содержимое и базу данных. Копируем на новый сервер. Копируем туда же папку setup из установки modx такой же версии.
Производим установку. Очищаем вновь созданную базу данных и импортируем туда запакованную базу данных. Производим установку(обновление) и в конце ставим галочку удалить установочные файлы


//**************************************************
//**************************************************
//**************************************************
//other
1. системные настройки\сайт\шаблон по умолчанию - изменение шаблона для вновь создающихся страниц
2. для видео и аудио лучше делать отдельное поле, а не запихивать в поле content
//**************************************************
//права доступа
1. Контроль доступа/Создаем новую группу/расставляем web,mgr/Content Editor
2. Управление/Пользователи/создать нового пользователя/добавляем его в созданную группу/ставим активным/
//настраиваем свои права
1. Контроль доступа/политика доступа/копируем Content Editor и редактируем
2. Добавляем пункты: изменять права доступа к каталогам, создавать каталоги в файловой системе, получать список подкаталогов для каталога в файловой системе,
удалять каталоги в файловой системе, переименовывать каталоги в файловой системе;
создавать файлы, смотреть список файлов в определенном каталоге, использовать диспетчер файлов, удалять файлы, видеть дерево файлов в левой навигационной панели,
распаковать зип-архивы, изменять файлы, загружать файлы в папку, просматривать содержисое файла, использовать пакеты в системе управления пакетами,
использовать страницу поиск, видеть источник файлов, view_template.
//настраиваем источник файлов
1. Медиа/источники файлов/копируем имеющуюся/прописываем basePath, baseUrl (assets/dist/img/)
2. Контроль доступа/редакторы сайта/доступ к источнику файлов/добавить источник файлов/content member media-source-admin
3. Медиа/источники файлов/редактируем filesystem/права доступа/добавить группу пользователей/admin super-user media-source-admin
4. Медиа/источники файлов/редактируем content/права доступа/добавить группу пользователей/admin super-user media-source-admin
//чтобы имел доступ только к некоторым ресурсам
1. Содержимое/группы ресурсов/создать группу ресурсов/Менеджер web,mgr автоматически дать доступ группе admin/перетаскиваем в эту группу необходимые ресурсы
2. Контроль доступа/редактируем Редакторы сайта/доступ к группам ресурсов/менеджер mgr member resource
3. Содержимое/группы ресурсов/создать группу ресурсов/админ web,mgr автоматически дать доступ группе admin/перетаскиваем в эту группу все остальные ресурсы
//*****************************************************************************************************
1. Создание нового пользователя и назначение прав

Переходим в меню: "Настройки" > "Контроль доступа"
Переходим на вкладку "Политики доступа"
Копируем "Content Editor", редактируем и называем новую политику "Менеджер"
Устанавливаем разрешения:
Установить галку "Изменять права доступа (chmod) к каталогам"
Установить галку "Создавать каталоги в файловой системе"
Установить галку "Получать список подкаталогов для каталога в файловой системе"
Установить галку "Переименовывать каталоги в файловой системе"
Установить галку "Создавать файлы"
Установить галку "Смотреть список файлов в определенном каталоге"
Установить галку "Использовать диспетчер файлов"
Установить галку "Удалять файлы"
Установить галку "Видеть дерево файлов в левой навигационной панели"
Установить галку "Изменять файлы"
Установить галку "Загружать файлы в папку"
Установить галку "Просматривать содержимое файла"
Установить галку "Использовать пакеты в системе управления пакетами"
Установить галку "Использовать страницу «Поиск»"
Сохранить.
Переходим в меню: "Настройки" > "Контроль доступа"
Переходим на вкладку: "Группы пользователей & Пользователи"
Создаем новую группу пользователей и задаем имя "Контент менеджеры"
Устанавливаем в окне новой группы пользователей контексты web, mgr
Политика бэкэнда в окне новой группы: "Менеджер" + Сохранить
Новая группа пользователей "Контент менеджеры" > Редактировать
Переходим на вкладку: "Права доступа"
На вкладке "Доступ к контекстам" редактируем mgr, web по очереди
mgr, web > редактировать, устанавливаем "Политика доступа" как "Менеджер" + Сохранить
Переходим в меню "Управление" > "Пользователи" и создаем нового пользователя по кнопке "Новый пользователь"
Имя manager, указываем E-mail менеджера, устанавливам радиобаттон ниже как "Я укажу пароль сам" и задаем пароль
Переходим на вкладку "Права доступа" > "Добавить пользователя в группу"
Группа пользователей: "Контент Менеджеры", Роль: "Super User"
Установить чекбокс "Активный" + Сохранить
Переходим в меню "Управление" > "Перезагрузить права доступа"

2. Ограничения на просмотр файловой системы
2.1. Добавляем источник файлов

Переходим в меню: "Медиа" > "Источники файлов"
Скопируем "Filesystem"
Отредактируем скопированный источник
Название: "Images"; basePath, baseUrl: "assets/images/"
Переходим в меню: "Настройки" > "Контроль доступа"
Отредактируем группу пользователей "Контент менеджеры" правой кнопкой мыши
Переходим на вкладку: "Права доступа" > "Доступ к источнику файлов" и добавим новый источник по кнопке "Добавить источник файлов"
Источник: Images, Минимальная роль: Member - 9999, Политика доступа: Media Source Admin
Сохранить; Меню: "Управление" > "Очистить кэш"; Меню: "Управление" > "Перезагрузить права доступа"

2.2. Удаляем источник "Filesystem" для manager

Переходим в меню: "Медиа" > "Источники файлов"
Filesystem > Редактировать
Переходим на вкладку: "Права доступа", нажимаем "Добавить группу пользователей"
Группа пользователей: "Administrator", Минимальная роль: "Super User - 0", Политика: "Media Source Admin" + Сохранить
Переходим в меню: "Медиа" > "Источники файлов"
Images > Редактировать
Переходим на вкладку: "Права доступа", нажимаем "Добавить группу пользователей"
Группа пользователей: "Administrator", Минимальная роль: "Super User - 0", Политика: "Media Source Admin" + Сохранить

3. Управление группами ресурсов

Переходим в меню: "Содержимое" > "Группы песурсов"
Создать группу ресурсов
Имя: "Администратор", Контексты: "web,mgr"
Установить галку "Автоматически дать доступ группе Administrator"
Добавить элементы в новую группу "Администратор", которые мы хотим скрыть от менеджера
Сохранить; Меню: "Управление" > "Очистить кэш"; Меню: "Управление" > "Перезагрузить права доступа"
//****************************************************************************************************************
//****************************************************************************************************************
//плагин Collections
1. Создание новой коллекции для представления дочерних ресурсов в виде таблицы. Данный шаг выполняется на странице "Виды коллекций" (Приложения -> Виды коллекций). На этой странице отображаются все существующие коллекции компонента Collections. По умолчанию после установки уже доступна (подготовлена для использования) коллекция для статей блога под названием "Blog". Создание новой коллекции осуществляется с помощью кнопки "Новый вид". Например, создадим коллекцию "Видеоматериалы".

2. Настройка коллекции "Видеоматериалы". Осуществляется эта операция на странице "Изменить вид". На этой странице осуществляется как настройка общих параметров, так и таблицы, посредством которой будут выводиться и управляться дочерние ресурсы.

В качестве значений основных параметров укажем следующие значения:

название: видеоматериалы;
описание: коллекция для представления видеоматериалов на сайте (дата публикации, картинка к уроку, название видео, продолжительность видео);
задать как вид по умолчанию: нет;
размер страницы: 10;
поле сортировки: publishedon.
направление сортировки: По возрастанию.
Настройку столбцов, которые будут использоваться для формирования таблицы, произведём в нижней части страницы "Изменить вид".

Заголовок	Название	Ширина	Рендерер
id (скрытый)	id	20	
Дата публикации	publishedon	20	Collections.renderer.datetimeTwoLines
Изображение	tv_imageVideo	15	Collections.renderer.image
Название	pagetitle	100	Collections.renderer.pagetitleWithButtons
Длительность	tv_durationVideo	20	
При указании TV-полей необходимо использовать префикс tv_.

3. Установка созданной коллекции необходимым родительским ресурсам. Осуществляется посредством выполнения 2 шагов:

Перейти на вкладку "Настройки" и выбрать из раскрывающего списка "Тип ресурса" пункт "Коллекция".
На вкладке "Настройки" в разделе "Коллекции" выбрать из раскрывающего списка "Вид коллекции" необходимый вид (в данном случае "Видеоматериалы").
Справка по полям страницы "Изменить вид"

Поля, с помощью которых задаются общие настройки коллекции:

Название - имя коллекции.
Описание - поле, которое позволяет сохранить поясняющую информацию об назначении этой коллекции.
Задать как вид по умолчанию. Значение "Да" будет означать то, что данная коллекция будет устанавливаться в качестве вида дочерних ресурсов по умолчанию.
По умолчанию для шаблонов - указывает, что этот вид необходимо использовать по умолчанию при создании новой коллекции, если она имеет указанный MODX шаблон. При необходимости вид коллекции можно изменить. Осуществляется это посредством раскрывающего списка, расположенного на вкладке ресурса "Настройки" в секции "Коллекции".
Поле сортировки - указывает имя поля, которое будет по умолчанию определять порядок вывода (сортировку) записей (ресурсов) таблицы.
Направление сортировки - задаёт направление сортировки по умолчанию.
Размер страницы (при пагинации) - определяет, какое количество дочерних ресурсов может быть выведено на одной странице.
Разрешить массовые действия - добавляет в таблицу флажки для множественного выбора ресурсов и массовые действия, которые можно применить к этому выбору.
Разрешить перетаскивание - позволяет помещать ресурсы, не имеющие детей, в коллекцию, путём их перетаскивания с помощью мыши.
Место расположения контента - позиция, в которой необходимо располагать стандартное поле ресурса content.
Надпись вкладки - настройка названия вкладки, в которой будут отображаться дочерние ресурсы.
Пункты контекстного меню - название элементов, которые необходимо отобразить в контекстном меню (вызывается контекстное меню посредством нажатия правой кнопки мыши в области принадлежащей таблицы).
Кнопки - список, содержащий названия кнопок, которые необходимо отобразить рядом с заголовком ресурса (если используется соответствующий ренедерер).
Элементы, посредством которых задаются настройки коллекции:

Выбор типа ресурса – добавить к кнопке "Создать дочерний ресурс" выпадающий список, с помощью которого можно выбрать тип создаваемого ресурса.
Тип дочерних ресурсов по умолчанию - устанавливает, какой тип ресурса использовать по умолчанию при создании дочерних ресурсов.
Шаблон дочерних ресурсов по умолчанию - указывает, какой шаблон необходимо устанавливать дочерним ресурсам во время их создания по умолчанию.
Надпись кнопки создания дочерних ресурсов - задание необходимой надписи кнопки "Создать дочерний ресурс".
Разрешённые типы ресурсов - указывает, какие типы ресурсов (через запятую) можно создавать с помощью выпадающего списка кнопки "Создать дочерний ресурс", если параметр "Выбор типа ресурса" установлен в положение "Да".
Название элементов, которые используются при создании столбцов таблицы:

Заголовок (строка или ключ переменной словаря MODX) - название колонки в таблице.
Название - имя поля ресурса из modResource, TV переменная (префикс tv_, имя TV не должно содержать точку), или любой псевдоним Tagger (префикс tagger_).
Скрытый. Если установить переключатель в положение "Да", то этот столбец не будет отображаться в таблице.
Сортировка. Если перевести данный параметр в состояние "Да", то пользователю будет предоставлена возможность сортировки таблицы в соответствии со значениями этого столбца.
Ширина - ширина столбца.
Редактор - (строка) Xtype или (объект) JSON валидный редактор, с помощью которого пользователь сможет редактировать данные прямо в таблице.
Рендерер - имя функции, которая будет использоваться для визуального отображения данных поля в ячейке таблицы.
Позиция - порядковый номер столбца в таблице.
В качестве редакторов таблицы может использоваться любой корректный Xtype (строка) или объект JSON.

По умолчанию доступны следующие виды редакторов:

textfield (для текстовых полей).
textarea (для текстовых областей).
modx-combo-boolean (для установки логического значения "Да" или "Нет").
numberfield или {"type": "number field", "allowDecimals": false, "allowNegative": false} (для числовых полей).
Рендереры (функции), посредством которых осуществляется представление данных дочерних ресурсов в полях таблицы:

this.rendYesNo - Да/Нет (1/0), используется для вывода логических значений.
Collections.renderer.qtip - отображает значения поля в виде подсказки (при наведении). Обычно используется для вывода полей, содержащих большое количество символов.
Collections.renderer.pagetitleWithButtons - заголовок (pagetitle) ресурса (в h2 элементе) со ссылкой "Редактирование" и кнопками для обновления (update), просмотра (view), удаления (delete), публикации (publish).
Collections.renderer.pagetitle - заголовок (pagetitle) ресурса (в h2 элементе) со ссылкой "Редактирование".
Collections.renderer.pagetitleLink - заголовок (pagetitle) ресурса со ссылкой "Редактирование" (текст заголовка меньше чем h2).
Collections.renderer.datetimeTwoLines - выводит поле, содержащее дату и время в 2 строки. На первой строке отображает дату, а на второй - время. Отображение даты и времени форматируется в соответствии с системными настройками MODX Revolution.
Collections.renderer.datetime - выводит дату и время на одной строке. Отображение даты и времени форматируется в соответствии с системными настройками MODX Revolution.
Collections.renderer.image - выводит поле, содержащее изображение, в виде миниатюры.